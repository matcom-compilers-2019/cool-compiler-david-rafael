//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.7
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from Cool.g4 by ANTLR 4.7

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419




#pragma warning disable CS1591 // Missing XML comment for publicly visible type or member
#pragma warning disable CS3021 // Type or member does not need a CLSCompliant attribute because the assembly does not have a CLSCompliant attribute
#pragma warning disable CS0105 //The using directive for 'System.Collections.Generic' appeared previously in this namespace [D:\Desktop\projects\coolc\coolc\src\coolc\coolc.csproj


using Antlr4.Runtime.Misc;
using Antlr4.Runtime.Tree;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete generic visitor for a parse tree produced
/// by <see cref="CoolParser"/>.
/// </summary>
/// <typeparam name="Result">The return type of the visit operation.</typeparam>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.7")]
[System.CLSCompliant(false)]
public interface ICoolVisitor<Result> : IParseTreeVisitor<Result> {
	/// <summary>
	/// Visit a parse tree produced by <see cref="CoolParser.program"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitProgram([NotNull] CoolParser.ProgramContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CoolParser.classdef"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitClassdef([NotNull] CoolParser.ClassdefContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>methodFeature</c>
	/// labeled alternative in <see cref="CoolParser.feature"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMethodFeature([NotNull] CoolParser.MethodFeatureContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>attribFeature</c>
	/// labeled alternative in <see cref="CoolParser.feature"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAttribFeature([NotNull] CoolParser.AttribFeatureContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CoolParser.formal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFormal([NotNull] CoolParser.FormalContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>lessExp</c>
	/// labeled alternative in <see cref="CoolParser.expresion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLessExp([NotNull] CoolParser.LessExpContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>identifierExp</c>
	/// labeled alternative in <see cref="CoolParser.expresion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIdentifierExp([NotNull] CoolParser.IdentifierExpContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>assignExp</c>
	/// labeled alternative in <see cref="CoolParser.expresion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAssignExp([NotNull] CoolParser.AssignExpContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>atsimExp</c>
	/// labeled alternative in <see cref="CoolParser.expresion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAtsimExp([NotNull] CoolParser.AtsimExpContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>isvoidExp</c>
	/// labeled alternative in <see cref="CoolParser.expresion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIsvoidExp([NotNull] CoolParser.IsvoidExpContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>boolExp</c>
	/// labeled alternative in <see cref="CoolParser.expresion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBoolExp([NotNull] CoolParser.BoolExpContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>lessEqualExp</c>
	/// labeled alternative in <see cref="CoolParser.expresion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLessEqualExp([NotNull] CoolParser.LessEqualExpContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>biggerEqualExp</c>
	/// labeled alternative in <see cref="CoolParser.expresion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBiggerEqualExp([NotNull] CoolParser.BiggerEqualExpContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>whileExp</c>
	/// labeled alternative in <see cref="CoolParser.expresion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitWhileExp([NotNull] CoolParser.WhileExpContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>notExp</c>
	/// labeled alternative in <see cref="CoolParser.expresion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNotExp([NotNull] CoolParser.NotExpContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>bracedExp</c>
	/// labeled alternative in <see cref="CoolParser.expresion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBracedExp([NotNull] CoolParser.BracedExpContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>letExp</c>
	/// labeled alternative in <see cref="CoolParser.expresion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLetExp([NotNull] CoolParser.LetExpContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>parentExp</c>
	/// labeled alternative in <see cref="CoolParser.expresion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitParentExp([NotNull] CoolParser.ParentExpContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>equalsExp</c>
	/// labeled alternative in <see cref="CoolParser.expresion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitEqualsExp([NotNull] CoolParser.EqualsExpContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ifExp</c>
	/// labeled alternative in <see cref="CoolParser.expresion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIfExp([NotNull] CoolParser.IfExpContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>tildeExp</c>
	/// labeled alternative in <see cref="CoolParser.expresion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTildeExp([NotNull] CoolParser.TildeExpContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>methodCallExp</c>
	/// labeled alternative in <see cref="CoolParser.expresion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMethodCallExp([NotNull] CoolParser.MethodCallExpContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>newTypeExp</c>
	/// labeled alternative in <see cref="CoolParser.expresion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNewTypeExp([NotNull] CoolParser.NewTypeExpContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>stringExp</c>
	/// labeled alternative in <see cref="CoolParser.expresion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStringExp([NotNull] CoolParser.StringExpContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>infixExp</c>
	/// labeled alternative in <see cref="CoolParser.expresion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitInfixExp([NotNull] CoolParser.InfixExpContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>intExp</c>
	/// labeled alternative in <see cref="CoolParser.expresion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIntExp([NotNull] CoolParser.IntExpContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>biggerExp</c>
	/// labeled alternative in <see cref="CoolParser.expresion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBiggerExp([NotNull] CoolParser.BiggerExpContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>caseExp</c>
	/// labeled alternative in <see cref="CoolParser.expresion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCaseExp([NotNull] CoolParser.CaseExpContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="CoolParser.newvar"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNewvar([NotNull] CoolParser.NewvarContext context);
}
