//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.7
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\antlr\Cool.g4 by ANTLR 4.7

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419




#pragma warning disable CS1591 // Missing XML comment for publicly visible type or member
#pragma warning disable CS3021 // Type or member does not need a CLSCompliant attribute because the assembly does not have a CLSCompliant attribute
#pragma warning disable CS0105 //The using directive for 'System.Collections.Generic' appeared previously in this namespace [D:\Desktop\projects\coolc\coolc\src\coolc\coolc.csproj



using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="ICoolListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.7")]
[System.CLSCompliant(false)]
public partial class CoolBaseListener : ICoolListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="CoolParser.program"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterProgram([NotNull] CoolParser.ProgramContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CoolParser.program"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitProgram([NotNull] CoolParser.ProgramContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CoolParser.classdef"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterClassdef([NotNull] CoolParser.ClassdefContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CoolParser.classdef"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitClassdef([NotNull] CoolParser.ClassdefContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>methodFeature</c>
	/// labeled alternative in <see cref="CoolParser.feature"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMethodFeature([NotNull] CoolParser.MethodFeatureContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>methodFeature</c>
	/// labeled alternative in <see cref="CoolParser.feature"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMethodFeature([NotNull] CoolParser.MethodFeatureContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>attribFeature</c>
	/// labeled alternative in <see cref="CoolParser.feature"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAttribFeature([NotNull] CoolParser.AttribFeatureContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>attribFeature</c>
	/// labeled alternative in <see cref="CoolParser.feature"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAttribFeature([NotNull] CoolParser.AttribFeatureContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CoolParser.formal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFormal([NotNull] CoolParser.FormalContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CoolParser.formal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFormal([NotNull] CoolParser.FormalContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>lessExp</c>
	/// labeled alternative in <see cref="CoolParser.expresion"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLessExp([NotNull] CoolParser.LessExpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>lessExp</c>
	/// labeled alternative in <see cref="CoolParser.expresion"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLessExp([NotNull] CoolParser.LessExpContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>identifierExp</c>
	/// labeled alternative in <see cref="CoolParser.expresion"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIdentifierExp([NotNull] CoolParser.IdentifierExpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>identifierExp</c>
	/// labeled alternative in <see cref="CoolParser.expresion"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIdentifierExp([NotNull] CoolParser.IdentifierExpContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>assignExp</c>
	/// labeled alternative in <see cref="CoolParser.expresion"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAssignExp([NotNull] CoolParser.AssignExpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>assignExp</c>
	/// labeled alternative in <see cref="CoolParser.expresion"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAssignExp([NotNull] CoolParser.AssignExpContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>atsimExp</c>
	/// labeled alternative in <see cref="CoolParser.expresion"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAtsimExp([NotNull] CoolParser.AtsimExpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>atsimExp</c>
	/// labeled alternative in <see cref="CoolParser.expresion"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAtsimExp([NotNull] CoolParser.AtsimExpContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>isvoidExp</c>
	/// labeled alternative in <see cref="CoolParser.expresion"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIsvoidExp([NotNull] CoolParser.IsvoidExpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>isvoidExp</c>
	/// labeled alternative in <see cref="CoolParser.expresion"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIsvoidExp([NotNull] CoolParser.IsvoidExpContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>boolExp</c>
	/// labeled alternative in <see cref="CoolParser.expresion"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBoolExp([NotNull] CoolParser.BoolExpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>boolExp</c>
	/// labeled alternative in <see cref="CoolParser.expresion"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBoolExp([NotNull] CoolParser.BoolExpContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>lessEqualExp</c>
	/// labeled alternative in <see cref="CoolParser.expresion"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLessEqualExp([NotNull] CoolParser.LessEqualExpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>lessEqualExp</c>
	/// labeled alternative in <see cref="CoolParser.expresion"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLessEqualExp([NotNull] CoolParser.LessEqualExpContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>whileExp</c>
	/// labeled alternative in <see cref="CoolParser.expresion"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterWhileExp([NotNull] CoolParser.WhileExpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>whileExp</c>
	/// labeled alternative in <see cref="CoolParser.expresion"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitWhileExp([NotNull] CoolParser.WhileExpContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>notExp</c>
	/// labeled alternative in <see cref="CoolParser.expresion"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNotExp([NotNull] CoolParser.NotExpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>notExp</c>
	/// labeled alternative in <see cref="CoolParser.expresion"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNotExp([NotNull] CoolParser.NotExpContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>bracedExp</c>
	/// labeled alternative in <see cref="CoolParser.expresion"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBracedExp([NotNull] CoolParser.BracedExpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>bracedExp</c>
	/// labeled alternative in <see cref="CoolParser.expresion"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBracedExp([NotNull] CoolParser.BracedExpContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>letExp</c>
	/// labeled alternative in <see cref="CoolParser.expresion"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLetExp([NotNull] CoolParser.LetExpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>letExp</c>
	/// labeled alternative in <see cref="CoolParser.expresion"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLetExp([NotNull] CoolParser.LetExpContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>parentExp</c>
	/// labeled alternative in <see cref="CoolParser.expresion"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParentExp([NotNull] CoolParser.ParentExpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>parentExp</c>
	/// labeled alternative in <see cref="CoolParser.expresion"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParentExp([NotNull] CoolParser.ParentExpContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>equalsExp</c>
	/// labeled alternative in <see cref="CoolParser.expresion"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEqualsExp([NotNull] CoolParser.EqualsExpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>equalsExp</c>
	/// labeled alternative in <see cref="CoolParser.expresion"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEqualsExp([NotNull] CoolParser.EqualsExpContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>ifExp</c>
	/// labeled alternative in <see cref="CoolParser.expresion"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIfExp([NotNull] CoolParser.IfExpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>ifExp</c>
	/// labeled alternative in <see cref="CoolParser.expresion"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIfExp([NotNull] CoolParser.IfExpContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>tildeExp</c>
	/// labeled alternative in <see cref="CoolParser.expresion"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTildeExp([NotNull] CoolParser.TildeExpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>tildeExp</c>
	/// labeled alternative in <see cref="CoolParser.expresion"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTildeExp([NotNull] CoolParser.TildeExpContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>methodCallExp</c>
	/// labeled alternative in <see cref="CoolParser.expresion"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMethodCallExp([NotNull] CoolParser.MethodCallExpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>methodCallExp</c>
	/// labeled alternative in <see cref="CoolParser.expresion"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMethodCallExp([NotNull] CoolParser.MethodCallExpContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>newTypeExp</c>
	/// labeled alternative in <see cref="CoolParser.expresion"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNewTypeExp([NotNull] CoolParser.NewTypeExpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>newTypeExp</c>
	/// labeled alternative in <see cref="CoolParser.expresion"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNewTypeExp([NotNull] CoolParser.NewTypeExpContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>stringExp</c>
	/// labeled alternative in <see cref="CoolParser.expresion"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStringExp([NotNull] CoolParser.StringExpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>stringExp</c>
	/// labeled alternative in <see cref="CoolParser.expresion"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStringExp([NotNull] CoolParser.StringExpContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>infixExp</c>
	/// labeled alternative in <see cref="CoolParser.expresion"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInfixExp([NotNull] CoolParser.InfixExpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>infixExp</c>
	/// labeled alternative in <see cref="CoolParser.expresion"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInfixExp([NotNull] CoolParser.InfixExpContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>intExp</c>
	/// labeled alternative in <see cref="CoolParser.expresion"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIntExp([NotNull] CoolParser.IntExpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>intExp</c>
	/// labeled alternative in <see cref="CoolParser.expresion"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIntExp([NotNull] CoolParser.IntExpContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>caseExp</c>
	/// labeled alternative in <see cref="CoolParser.expresion"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCaseExp([NotNull] CoolParser.CaseExpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>caseExp</c>
	/// labeled alternative in <see cref="CoolParser.expresion"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCaseExp([NotNull] CoolParser.CaseExpContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CoolParser.newvar"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNewvar([NotNull] CoolParser.NewvarContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CoolParser.newvar"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNewvar([NotNull] CoolParser.NewvarContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }

    /// <summary>
	/// Enter a parse tree produced by the <c>equalsExp</c>
	/// labeled alternative in <see cref="CoolParser.expresion"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
    public void EnterBiggerExp([NotNull] CoolParser.BiggerExpContext context)  { }
    /// <summary>
	/// Enter a parse tree produced by the <c>equalsExp</c>
	/// labeled alternative in <see cref="CoolParser.expresion"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
    public void ExitBiggerExp([NotNull] CoolParser.BiggerExpContext context) { }
    /// <summary>
    /// Enter a parse tree produced by the <c>whileExp</c>
    /// labeled alternative in <see cref="CoolParser.expresion"/>.
    /// <para>The default implementation does nothing.</para>
    /// </summary>
    /// <param name="context">The parse tree.</param>
    public virtual void EnterBiggerEqualExp([NotNull] CoolParser.BiggerEqualExpContext context) { }
    /// <summary>
    /// Exit a parse tree produced by the <c>lessEqualExp</c>
    /// labeled alternative in <see cref="CoolParser.expresion"/>.
    /// <para>The default implementation does nothing.</para>
    /// </summary>
    /// <param name="context">The parse tree.</param>
    public virtual void ExitBiggerEqualExp([NotNull] CoolParser.BiggerEqualExpContext context) { }
    
}
